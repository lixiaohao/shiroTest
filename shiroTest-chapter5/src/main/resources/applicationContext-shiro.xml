<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="sessionDao" class="com.lixiaohao.test.springshiro.session.UserCacheSessionDao" />



    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="SHIRI_AUTHOR"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="1800"/>
    </bean>

    <!--定义sessionManager

      可以自定义sessionManager，或者使用org.apache.shiro.web.session.mgt.DefaultWebSessionManager
      -->

    <bean id="sessionMenager" class="com.lixiaohao.test.springshiro.session.mgt.UserWebSessionManager">
        <property name="sessionDAO" ref="sessionDao"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie" />
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
        <property name="realm" ref="myRealm"/>
        <!-- By default the servlet container sessions will be used.  Uncomment this line
             to use shiro's native sessions (see the JavaDoc for more): -->
        <!-- <property name="sessionMode" value="native"/> -->
        <property name="sessionManager" ref="sessionMenager"/>
    </bean>
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/shiro/user/login"/>
        <property name="successUrl" value="/shiro-success"/>
        <property name="unauthorizedUrl" value="/shiro-unauthorized"/>
        <!-- The 'filters' property is not necessary since any declared javax.servlet.Filter bean
             defined will be automatically acquired and available via its beanName in chain
             definitions, but you can perform overrides or parent/child consolidated configuration
             here if you like: -->
        <!-- <property name="filters">
            <util:map>
                <entry key="aName" value-ref="someFilterPojo"/>
            </util:map>
        </property> -->

        <property name="filters">
            <map>
                <entry key="authc">
                    <bean class="com.lixiaohao.test.springshiro.filter.AuthenticationFilter"></bean>
                </entry>
            </map>
        </property>

        <property name="filterChainDefinitions">
            <value>
                /shiro/anon/** = anon
            </value>
        </property>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>


</beans>